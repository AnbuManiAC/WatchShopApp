{
  "formatVersion": 1,
  "database": {
    "version": 1,
    "identityHash": "e91684a72b44a6b53778bc0bc116dadd",
    "entities": [
      {
        "tableName": "Address",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`addressId` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `contactName` TEXT NOT NULL, `addressLine1` TEXT NOT NULL, `addressLine2` TEXT NOT NULL, `city` TEXT NOT NULL, `state` TEXT NOT NULL, `pincode` INTEGER NOT NULL, `contactNumber` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "addressId",
            "columnName": "addressId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "contactName",
            "columnName": "contactName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "addressLine1",
            "columnName": "addressLine1",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "addressLine2",
            "columnName": "addressLine2",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "city",
            "columnName": "city",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "state",
            "columnName": "state",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "pincode",
            "columnName": "pincode",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "contactNumber",
            "columnName": "contactNumber",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "addressId"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_Address_contactName_addressLine1_addressLine2_city_state_pincode_contactNumber",
            "unique": true,
            "columnNames": [
              "contactName",
              "addressLine1",
              "addressLine2",
              "city",
              "state",
              "pincode",
              "contactNumber"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_Address_contactName_addressLine1_addressLine2_city_state_pincode_contactNumber` ON `${TABLE_NAME}` (`contactName`, `addressLine1`, `addressLine2`, `city`, `state`, `pincode`, `contactNumber`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "AddressAndGroupCrossRef",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`addressGroupId` INTEGER NOT NULL, `addressId` INTEGER NOT NULL, PRIMARY KEY(`addressGroupId`, `addressId`), FOREIGN KEY(`addressGroupId`) REFERENCES `AddressGroup`(`addressGroupId`) ON UPDATE CASCADE ON DELETE CASCADE , FOREIGN KEY(`addressId`) REFERENCES `Address`(`addressId`) ON UPDATE CASCADE ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "addressGroupId",
            "columnName": "addressGroupId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "addressId",
            "columnName": "addressId",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "addressGroupId",
            "addressId"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "AddressGroup",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "addressGroupId"
            ],
            "referencedColumns": [
              "addressGroupId"
            ]
          },
          {
            "table": "Address",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "addressId"
            ],
            "referencedColumns": [
              "addressId"
            ]
          }
        ]
      },
      {
        "tableName": "AddressGroup",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`addressGroupId` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `userId` INTEGER NOT NULL, `groupName` TEXT NOT NULL, FOREIGN KEY(`userId`) REFERENCES `User`(`userId`) ON UPDATE CASCADE ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "addressGroupId",
            "columnName": "addressGroupId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "groupName",
            "columnName": "groupName",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "addressGroupId"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_AddressGroup_userId_groupName",
            "unique": true,
            "columnNames": [
              "userId",
              "groupName"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_AddressGroup_userId_groupName` ON `${TABLE_NAME}` (`userId`, `groupName`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "User",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "userId"
            ],
            "referencedColumns": [
              "userId"
            ]
          }
        ]
      },
      {
        "tableName": "Cart",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`cartId` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `userId` INTEGER NOT NULL, `productId` INTEGER NOT NULL, `quantity` INTEGER NOT NULL, FOREIGN KEY(`userId`) REFERENCES `User`(`userId`) ON UPDATE CASCADE ON DELETE CASCADE , FOREIGN KEY(`productId`) REFERENCES `Product`(`productId`) ON UPDATE CASCADE ON DELETE RESTRICT )",
        "fields": [
          {
            "fieldPath": "cartId",
            "columnName": "cartId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "productId",
            "columnName": "productId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "quantity",
            "columnName": "quantity",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "cartId"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_Cart_userId_productId",
            "unique": true,
            "columnNames": [
              "userId",
              "productId"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_Cart_userId_productId` ON `${TABLE_NAME}` (`userId`, `productId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "User",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "userId"
            ],
            "referencedColumns": [
              "userId"
            ]
          },
          {
            "table": "Product",
            "onDelete": "RESTRICT",
            "onUpdate": "CASCADE",
            "columns": [
              "productId"
            ],
            "referencedColumns": [
              "productId"
            ]
          }
        ]
      },
      {
        "tableName": "Category",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`categoryId` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `categoryName` TEXT NOT NULL)",
        "fields": [
          {
            "fieldPath": "categoryId",
            "columnName": "categoryId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "categoryName",
            "columnName": "categoryName",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "categoryId"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_Category_categoryName",
            "unique": true,
            "columnNames": [
              "categoryName"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_Category_categoryName` ON `${TABLE_NAME}` (`categoryName`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "WishList",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`wishListId` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `userId` INTEGER NOT NULL, `productId` INTEGER NOT NULL, FOREIGN KEY(`userId`) REFERENCES `User`(`userId`) ON UPDATE CASCADE ON DELETE CASCADE , FOREIGN KEY(`productId`) REFERENCES `Product`(`productId`) ON UPDATE CASCADE ON DELETE RESTRICT )",
        "fields": [
          {
            "fieldPath": "wishListId",
            "columnName": "wishListId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "productId",
            "columnName": "productId",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "wishListId"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_WishList_userId_productId",
            "unique": true,
            "columnNames": [
              "userId",
              "productId"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_WishList_userId_productId` ON `${TABLE_NAME}` (`userId`, `productId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "User",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "userId"
            ],
            "referencedColumns": [
              "userId"
            ]
          },
          {
            "table": "Product",
            "onDelete": "RESTRICT",
            "onUpdate": "CASCADE",
            "columns": [
              "productId"
            ],
            "referencedColumns": [
              "productId"
            ]
          }
        ]
      },
      {
        "tableName": "Order",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`orderId` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `bulkOrderId` INTEGER NOT NULL, `userId` INTEGER NOT NULL, `timestamp` INTEGER NOT NULL, `actualTotal` REAL NOT NULL, `totalPrice` REAL NOT NULL, `addressInfo` TEXT NOT NULL, `orderStatus` TEXT NOT NULL, FOREIGN KEY(`userId`) REFERENCES `User`(`userId`) ON UPDATE CASCADE ON DELETE SET NULL )",
        "fields": [
          {
            "fieldPath": "orderId",
            "columnName": "orderId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "bulkOrderId",
            "columnName": "bulkOrderId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "timestamp",
            "columnName": "timestamp",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "actualTotal",
            "columnName": "actualTotal",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "totalPrice",
            "columnName": "totalPrice",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "addressInfo",
            "columnName": "addressInfo",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "orderStatus",
            "columnName": "orderStatus",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "orderId"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_Order_bulkOrderId_userId_timestamp_addressInfo",
            "unique": true,
            "columnNames": [
              "bulkOrderId",
              "userId",
              "timestamp",
              "addressInfo"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_Order_bulkOrderId_userId_timestamp_addressInfo` ON `${TABLE_NAME}` (`bulkOrderId`, `userId`, `timestamp`, `addressInfo`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "User",
            "onDelete": "SET NULL",
            "onUpdate": "CASCADE",
            "columns": [
              "userId"
            ],
            "referencedColumns": [
              "userId"
            ]
          }
        ]
      },
      {
        "tableName": "ProductOrdered",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`productOrderedId` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `orderId` INTEGER NOT NULL, `productId` INTEGER NOT NULL, `quantity` INTEGER NOT NULL, FOREIGN KEY(`orderId`) REFERENCES `Order`(`orderId`) ON UPDATE CASCADE ON DELETE RESTRICT , FOREIGN KEY(`productId`) REFERENCES `Product`(`productId`) ON UPDATE CASCADE ON DELETE RESTRICT )",
        "fields": [
          {
            "fieldPath": "productOrderedId",
            "columnName": "productOrderedId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "orderId",
            "columnName": "orderId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "productId",
            "columnName": "productId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "quantity",
            "columnName": "quantity",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "productOrderedId"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_ProductOrdered_orderId_productId",
            "unique": true,
            "columnNames": [
              "orderId",
              "productId"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_ProductOrdered_orderId_productId` ON `${TABLE_NAME}` (`orderId`, `productId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "Order",
            "onDelete": "RESTRICT",
            "onUpdate": "CASCADE",
            "columns": [
              "orderId"
            ],
            "referencedColumns": [
              "orderId"
            ]
          },
          {
            "table": "Product",
            "onDelete": "RESTRICT",
            "onUpdate": "CASCADE",
            "columns": [
              "productId"
            ],
            "referencedColumns": [
              "productId"
            ]
          }
        ]
      },
      {
        "tableName": "Product",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`productId` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `name` TEXT NOT NULL, `brandId` INTEGER NOT NULL, `originalPrice` REAL NOT NULL, `currentPrice` REAL NOT NULL, `totalRating` REAL, `stockCount` INTEGER NOT NULL, FOREIGN KEY(`brandId`) REFERENCES `ProductBrand`(`brandId`) ON UPDATE CASCADE ON DELETE RESTRICT )",
        "fields": [
          {
            "fieldPath": "productId",
            "columnName": "productId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "brandId",
            "columnName": "brandId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "originalPrice",
            "columnName": "originalPrice",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "currentPrice",
            "columnName": "currentPrice",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "totalRating",
            "columnName": "totalRating",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "stockCount",
            "columnName": "stockCount",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "productId"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_Product_name",
            "unique": true,
            "columnNames": [
              "name"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_Product_name` ON `${TABLE_NAME}` (`name`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "ProductBrand",
            "onDelete": "RESTRICT",
            "onUpdate": "CASCADE",
            "columns": [
              "brandId"
            ],
            "referencedColumns": [
              "brandId"
            ]
          }
        ]
      },
      {
        "tableName": "ProductBrand",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`brandId` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `brandName` TEXT NOT NULL, `brandImageUrl` TEXT NOT NULL)",
        "fields": [
          {
            "fieldPath": "brandId",
            "columnName": "brandId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "brandName",
            "columnName": "brandName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "brandImageUrl",
            "columnName": "brandImageUrl",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "brandId"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_ProductBrand_brandName",
            "unique": true,
            "columnNames": [
              "brandName"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_ProductBrand_brandName` ON `${TABLE_NAME}` (`brandName`)"
          },
          {
            "name": "index_ProductBrand_brandImageUrl",
            "unique": true,
            "columnNames": [
              "brandImageUrl"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_ProductBrand_brandImageUrl` ON `${TABLE_NAME}` (`brandImageUrl`)"
          }
        ],
        "foreignKeys": []
      },
      {
        "tableName": "ProductDetail",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`productDetailId` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `productId` INTEGER NOT NULL, `title` TEXT NOT NULL, `content` TEXT NOT NULL, FOREIGN KEY(`productId`) REFERENCES `Product`(`productId`) ON UPDATE CASCADE ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "productDetailId",
            "columnName": "productDetailId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "productId",
            "columnName": "productId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "content",
            "columnName": "content",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "productDetailId"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_ProductDetail_productId_title_content",
            "unique": true,
            "columnNames": [
              "productId",
              "title",
              "content"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_ProductDetail_productId_title_content` ON `${TABLE_NAME}` (`productId`, `title`, `content`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "Product",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "productId"
            ],
            "referencedColumns": [
              "productId"
            ]
          }
        ]
      },
      {
        "tableName": "ProductImage",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`productImageId` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `productId` INTEGER NOT NULL, `imageUrl` TEXT NOT NULL, `imageIndex` INTEGER NOT NULL, FOREIGN KEY(`productId`) REFERENCES `Product`(`productId`) ON UPDATE CASCADE ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "productImageId",
            "columnName": "productImageId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "productId",
            "columnName": "productId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "imageUrl",
            "columnName": "imageUrl",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "imageIndex",
            "columnName": "imageIndex",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "productImageId"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_ProductImage_imageUrl",
            "unique": true,
            "columnNames": [
              "imageUrl"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_ProductImage_imageUrl` ON `${TABLE_NAME}` (`imageUrl`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "Product",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "productId"
            ],
            "referencedColumns": [
              "productId"
            ]
          }
        ]
      },
      {
        "tableName": "ProductCategoryCrossRef",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`subCategoryId` INTEGER NOT NULL, `productId` INTEGER NOT NULL, PRIMARY KEY(`subCategoryId`, `productId`), FOREIGN KEY(`subCategoryId`) REFERENCES `SubCategory`(`subCategoryId`) ON UPDATE CASCADE ON DELETE CASCADE , FOREIGN KEY(`productId`) REFERENCES `Product`(`productId`) ON UPDATE CASCADE ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "subCategoryId",
            "columnName": "subCategoryId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "productId",
            "columnName": "productId",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "subCategoryId",
            "productId"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "SubCategory",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "subCategoryId"
            ],
            "referencedColumns": [
              "subCategoryId"
            ]
          },
          {
            "table": "Product",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "productId"
            ],
            "referencedColumns": [
              "productId"
            ]
          }
        ]
      },
      {
        "tableName": "SearchSuggestion",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`searchSuggestionId` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `userId` INTEGER NOT NULL, `suggestion` TEXT NOT NULL, `timestamp` INTEGER NOT NULL, FOREIGN KEY(`userId`) REFERENCES `User`(`userId`) ON UPDATE CASCADE ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "searchSuggestionId",
            "columnName": "searchSuggestionId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "suggestion",
            "columnName": "suggestion",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "timestamp",
            "columnName": "timestamp",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "searchSuggestionId"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_SearchSuggestion_userId_suggestion",
            "unique": true,
            "columnNames": [
              "userId",
              "suggestion"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_SearchSuggestion_userId_suggestion` ON `${TABLE_NAME}` (`userId`, `suggestion`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "User",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "userId"
            ],
            "referencedColumns": [
              "userId"
            ]
          }
        ]
      },
      {
        "tableName": "SubCategory",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`subCategoryId` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `categoryId` INTEGER NOT NULL, `name` TEXT NOT NULL, `imageUrl` TEXT NOT NULL, FOREIGN KEY(`categoryId`) REFERENCES `Category`(`categoryId`) ON UPDATE CASCADE ON DELETE RESTRICT )",
        "fields": [
          {
            "fieldPath": "subCategoryId",
            "columnName": "subCategoryId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "categoryId",
            "columnName": "categoryId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "imageUrl",
            "columnName": "imageUrl",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "subCategoryId"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_SubCategory_categoryId_name",
            "unique": true,
            "columnNames": [
              "categoryId",
              "name"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_SubCategory_categoryId_name` ON `${TABLE_NAME}` (`categoryId`, `name`)"
          },
          {
            "name": "index_SubCategory_imageUrl",
            "unique": true,
            "columnNames": [
              "imageUrl"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_SubCategory_imageUrl` ON `${TABLE_NAME}` (`imageUrl`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "Category",
            "onDelete": "RESTRICT",
            "onUpdate": "CASCADE",
            "columns": [
              "categoryId"
            ],
            "referencedColumns": [
              "categoryId"
            ]
          }
        ]
      },
      {
        "tableName": "User",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`userId` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `name` TEXT NOT NULL, `email` TEXT NOT NULL, `mobileNumber` INTEGER NOT NULL, `password` TEXT NOT NULL, `image` TEXT)",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "email",
            "columnName": "email",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "mobileNumber",
            "columnName": "mobileNumber",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "password",
            "columnName": "password",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "image",
            "columnName": "image",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "userId"
          ],
          "autoGenerate": true
        },
        "indices": [
          {
            "name": "index_User_email",
            "unique": true,
            "columnNames": [
              "email"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_User_email` ON `${TABLE_NAME}` (`email`)"
          },
          {
            "name": "index_User_mobileNumber",
            "unique": true,
            "columnNames": [
              "mobileNumber"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_User_mobileNumber` ON `${TABLE_NAME}` (`mobileNumber`)"
          }
        ],
        "foreignKeys": []
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, 'e91684a72b44a6b53778bc0bc116dadd')"
    ]
  }
}